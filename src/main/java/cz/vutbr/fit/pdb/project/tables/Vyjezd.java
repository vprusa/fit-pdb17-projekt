package cz.vutbr.fit.pdb.project.tables;
// Generated Dec 10, 2017 4:55:13 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
//import java.math.BigDecimal;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;
import org.hibernate.annotations.TypeDefs;

import cz.vutbr.fit.pdb.project.model.TableBase;
import cz.vutbr.fit.pdb.project.tables.entities.JGeometryType;
import oracle.spatial.geometry.JGeometry;

/**
 * Vyjezd generated by hbm2java
 */
@Entity
@Table(name = "VYJEZD")
public class Vyjezd extends TableBase implements java.io.Serializable {

	@Id
	@Column(name = "ID_VYJEZD", unique = true, nullable = false, precision = 22, scale = 0)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "vyjezd_seq")
	@SequenceGenerator(name = "vyjezd_seq", sequenceName = "vyjezd_seq", allocationSize = 1, initialValue = 1)
	private Long idVyjezd;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ZONA_ID", nullable = false)
	private Zona zona;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vyjezd")
	private Set<Pobyt> pobyts = new HashSet<Pobyt>(0);

	public Vyjezd() {
	}

	public Vyjezd(Long idVyjezd) {
		this.idVyjezd = idVyjezd;
	}

	public Vyjezd(Long idVyjezd, Zona zona, Set<Pobyt> pobyts) {
		this.idVyjezd = idVyjezd;
		this.zona = zona;
		this.pobyts = pobyts;
	}

	public Long getIdVyjezd() {
		return this.idVyjezd;
	}

	public void setIdVyjezd(Long idVyjezd) {
		this.idVyjezd = idVyjezd;
	}

	public JGeometry getJGeometry() {
		return this.zona.getJGeoZony();
	}

	public Zona getZona() {
		return this.zona;
	}

	public void setZona(Zona zona) {
		this.zona = zona;
	}

	public Set<Pobyt> getPobyts() {
		return this.pobyts;
	}

	public void setPobyts(Set<Pobyt> pobyts) {
		this.pobyts = pobyts;
	}

	public static Vyjezd insert(Zona zona) {
		Vyjezd Vyjezd = new Vyjezd();
		try {
			entityManager.getTransaction().begin();
			Vyjezd.setZona(zona);
			log.info("\n\n\nSave");
			Vyjezd = entityManager.merge(Vyjezd);
			entityManager.getTransaction().commit();
		} catch (Exception e) {
			entityManager.getTransaction().rollback();
			e.printStackTrace();
		}
		return Vyjezd;
	}

	public static Vyjezd getByZona(Zona zona) {
		try {
			entityManager.getTransaction().begin();
			@SuppressWarnings("unchecked")
			Vyjezd parkovaciMistos = (Vyjezd) entityManager.createQuery("from Vyjezd where ZONA_ID = :id")
					.setParameter("id", zona.getIdZony()).getSingleResult();
			entityManager.getTransaction().commit();
			return parkovaciMistos;
		} catch (Exception e) {
			entityManager.getTransaction().rollback();
		//	e.printStackTrace();
		}
		return null;
	}

	public static List<Vyjezd> list() {
		try {
			entityManager.getTransaction().begin();
			@SuppressWarnings("unchecked")
			List<Vyjezd> Vyjezds = entityManager.createQuery("from Vyjezd").getResultList();
			for (Iterator<Vyjezd> iterator = Vyjezds.iterator(); iterator.hasNext();) {
				Vyjezd Vyjezd = (Vyjezd) iterator.next();
				System.out.println(Vyjezd.getIdVyjezd());
				// System.out.println(Vyjezd.getZona().getGeoZony().getJGeometry().toGeoJson());
			}
			entityManager.getTransaction().commit();
			return Vyjezds;
		} catch (Exception e) {
			entityManager.getTransaction().rollback();
			e.printStackTrace();
		}
		return Collections.emptyList();
	}

	public static Vyjezd update(Long VyjezdId, Zona zona) {
		log.info("Vyjezd.update");
		try {
			Zona.updateOrInsert(zona.getIdZony(), zona.getNazevZony(), zona.getJGeoZony());
			entityManager.getTransaction().begin();
			Vyjezd Vyjezd = (Vyjezd) entityManager.find(Vyjezd.class, VyjezdId);
			if (Vyjezd == null) {
				return null;
			}
			// Vyjezd.setGeoVyjezd(new JGeometryType(geoVyjezd));
			Vyjezd.setZona(zona);// (new JGeometryType(geoVyjezd));
			entityManager.getTransaction().commit();
			log.info(Vyjezd.getIdVyjezd());
			// log.info(Vyjezd.getGeoVyjezd());
			return Vyjezd;
		} catch (Exception e) {
			entityManager.getTransaction().rollback();
			e.printStackTrace();
		}
		return null;
	}

	public static boolean delete(Long VyjezdId) {
		try {
			entityManager.getTransaction().begin();
			Vyjezd Vyjezd = (Vyjezd) entityManager.find(Vyjezd.class, VyjezdId);
			entityManager.remove(Vyjezd);
			entityManager.getTransaction().commit();
		} catch (Exception e) {
			entityManager.getTransaction().rollback();
			e.printStackTrace();
			return false;
		}
		return true;
	}

}
