package cz.vutbr.fit.pdb.project.tables;
// Generated Nov 28, 2017 5:54:05 PM by Hibernate Tools 4.3.5.Final

import java.io.Serializable;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import cz.vutbr.fit.pdb.project.model.TableBase;
import oracle.ord.im.OrdImage;

/**
 * Vozidlo generated by hbm2java
 */
//@Entity
//@Table(name = "VOZIDLO")
public class Vozidlo2 extends TableBase implements java.io.Serializable {
/*
	private String spz;
	private OrdImage foto;
	private OrdImage spzFoto;
	private Set<Pobyt> pobyts = new HashSet<Pobyt>(0);

	public Vozidlo2() {
	}

	public Vozidlo2(String spz) {
		this.spz = spz;
	}

	public Vozidlo2(String spz, OrdImage foto, OrdImage spzFoto, Set<Pobyt> pobyts) {
		this.spz = spz;
		this.foto = foto;
		this.spzFoto = spzFoto;
		this.pobyts = pobyts;
	}

	@Id

	@Column(name = "SPZ", unique = true, nullable = false, length = 10)
	public String getSpz() {
		return this.spz;
	}

	public void setSpz(String spz) {
		this.spz = spz;
	}

	@Column(name = "FOTO")
	public OrdImage getFoto() {
		return this.foto;
	}

	public void setFoto(OrdImage foto) {
		this.foto = foto;
	}

	@Column(name = "SPZ_FOTO")
	public OrdImage getSpzFoto() {
		return this.spzFoto;
	}

	public void setSpzFoto(OrdImage spzFoto) {
		this.spzFoto = spzFoto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vozidlo")
	public Set<Pobyt> getPobyts() {
		return this.pobyts;
	}

	public void setPobyts(Set<Pobyt> pobyts) {
		this.pobyts = pobyts;
	}

	public static Vozidlo2 save(String spz, OrdImage foto, OrdImage spzFoto, Set<Pobyt> pobyts) {
		Vozidlo2 Vozidlo = new Vozidlo2(spz, foto, spzFoto, pobyts);
		try {
			entityManager.getTransaction().begin();
			Vozidlo = entityManager.merge(Vozidlo);
			entityManager.getTransaction().commit();
		} catch (Exception e) {
			entityManager.getTransaction().rollback();
			e.printStackTrace();
		}
		return Vozidlo;
	}

	public static List<Vozidlo2> list() {
		try {
			entityManager.getTransaction().begin();
			@SuppressWarnings("unchecked")
			List<Vozidlo2> Vozidlos = entityManager.createQuery("from Vozidlo").getResultList();
			for (Iterator<Vozidlo2> iterator = Vozidlos.iterator(); iterator.hasNext();) {
				Vozidlo2 Vozidlo = (Vozidlo2) iterator.next();
			}
			entityManager.getTransaction().commit();
			return Vozidlos;
		} catch (Exception e) {
			entityManager.getTransaction().rollback();
			e.printStackTrace();
		}
		return Collections.emptyList();
	}

	public static Vozidlo2 update(String spz, OrdImage foto, OrdImage spzFoto, Set<Pobyt> pobyts) {
		log.info("Vozidlo.update");
		try {
			entityManager.getTransaction().begin();
			Vozidlo2 Vozidlo = (Vozidlo2) entityManager.find(Vozidlo2.class, spz);
			if (Vozidlo == null) {
				return null;
			}
			Vozidlo.setSpz(spz);
			Vozidlo.setPobyts(pobyts);
			Vozidlo.setSpzFoto(spzFoto);
			entityManager.getTransaction().commit();
			return Vozidlo;
		} catch (Exception e) {
			entityManager.getTransaction().rollback();
			e.printStackTrace();
		}
		return null;
	}

	public static boolean delete(String spz) {
		try {
			entityManager.getTransaction().begin();
			Vozidlo2 Vozidlo = (Vozidlo2) entityManager.find(Vozidlo2.class, spz);
			entityManager.remove(Vozidlo);
			entityManager.getTransaction().commit();
		} catch (Exception e) {
			entityManager.getTransaction().rollback();
			e.printStackTrace();
			return false;
		}
		return true;
	}
*/
}
