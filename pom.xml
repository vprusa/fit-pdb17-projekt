<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cz.vutbr.fit.pdb</groupId>
	<artifactId>project01</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>project01</name>
	<url>https://www.fit.vutbr.cz/study/courses/PDB/</url>
	<!--scm> <url>https://gitlab.com/rychly/pdb-project-template</url> <connection>scm:git:https://rychly@gitlab.com/rychly/pdb-project-template.git</connection> 
		<developerConnection>scm:git:ssh://git@gitlab.com:rychly/pdb-project-template.git</developerConnection> 
		</scm -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<weblogic.version>12.1.3-0-0</weblogic.version>
		<oracle.version>12.2.0.1.0</oracle.version>
		<sqlj.version>11.1.0.0.0</sqlj.version>
		<fully.qualified.main.class>cz.vutbr.fit.pdb.project01.App</fully.qualified.main.class>
	</properties>
	<dependencies>
		<!--<dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> 
			<version>RELEASE</version> <scope>test</scope> </dependency> -->
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- Oracle JDBC Driver -->
		<dependency>
			<groupId>com.oracle.weblogic</groupId>
			<!-- for Java 1.2 -->
			<!--artifactId>classes12</artifactId -->
			<!-- for Java 1.4 -->
			<!--artifactId>ojdbc14</artifactId -->
			<!-- for Java 5 -->
			<!--artifactId>ojdbc5</artifactId -->
			<!-- for Java 6 -->
			<!--artifactId>ojdbc6</artifactId -->
			<!-- for Java 7 -->
			<!--artifactId>ojdbc7</artifactId -->
			<!-- for Java 8 -->
			<!--artifactId>ojdbc8</artifactId -->
			<artifactId>ojdbc8</artifactId>
			<version>${oracle.version}</version>
		</dependency>
		<dependency>
			<groupId>com.oracle.weblogic</groupId>
			<artifactId>xmlparserv2_sans_jaxp_services</artifactId>
			<version>${weblogic.version}</version>
		</dependency>
		<!-- Oracle XML Database -->
		<dependency>
			<groupId>com.oracle.weblogic</groupId>
			<artifactId>oracle.xdb_12.1.0</artifactId>
			<version>${weblogic.version}</version>
		</dependency>
		<!-- Oracle Multimedia Database -->
		<dependency>
			<groupId>oracle.ord.im</groupId>
			<artifactId>ordhttp</artifactId>
			<version>${oracle.version}</version>
		</dependency>
		<dependency>
			<groupId>oracle.ord.im</groupId>
			<artifactId>ordim</artifactId>
			<version>${oracle.version}</version>
		</dependency>
		<dependency>
			<groupId>oracle.sqlj</groupId>
			<artifactId>runtime12</artifactId>
			<version>${sqlj.version}</version>
		</dependency>
		<!-- Oracle SDO Locator Objects -->
		<dependency>
			<groupId>oracle.sdo.locator</groupId>
			<artifactId>sdoapi</artifactId>
			<version>${oracle.version}</version>
		</dependency>
		<dependency>
			<groupId>oracle.sdo.locator</groupId>
			<artifactId>sdogr</artifactId>
			<version>${oracle.version}</version>
		</dependency>
		<dependency>
			<groupId>oracle.sdo.locator</groupId>
			<artifactId>sdonm</artifactId>
			<version>${oracle.version}</version>
		</dependency>
		<dependency>
			<groupId>oracle.sdo.locator</groupId>
			<artifactId>sdotopo</artifactId>
			<version>${oracle.version}</version>
		</dependency>


		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.6.Final</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.6.Final</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hibernate.common/hibernate-commons-annotations -->
		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>5.0.1.Final</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-spatial -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-spatial</artifactId>
			<version>5.2.12.Final</version>
		</dependency>


		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>2.7.7</version>
		</dependency>
	</dependencies>
	<build>
		<!-- commented out to skip for the unset scm configuration -->
		<!--finalName>${project.artifactId}-${project.version}-r${buildNumber}</finalName -->
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${fully.qualified.main.class}</mainClass>
				</configuration>
			</plugin>
			<!-- use SCM-based build numbers -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<!-- commented out to skip for the unset scm configuration -->
							<!--goal>create</goal -->
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${fully.qualified.main.class}</mainClass>
					<shortRevisionLength>8</shortRevisionLength>
					<!-- do not check locally modified files and fail if there are any; 
						do not update the local repository -->
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
			</plugin>
			<!-- make a deployable archive, see http://stackoverflow.com/a/23986765 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.build.finalName}.lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>${project.build.finalName}.lib/</classpathPrefix>
							<mainClass>${fully.qualified.main.class}</mainClass>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>antrun-archive</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<property name="final.name"
									value="${project.build.directory}/${project.build.finalName}" />
								<property name="archive.includes"
									value="${project.build.finalName}.${project.packaging} ${project.build.finalName}.lib/*" />
								<tar basedir="${project.build.directory}" destfile="${final.name}.tgz"
									includes="${archive.includes}" compression="gzip" />
								<!--tar basedir="${project.build.directory}" destfile="${final.name}.tbz2" 
									includes="${archive.includes}" compression="bzip2"/ -->
								<!--zip basedir="${project.build.directory}" destfile="${final.name}.zip" 
									includes="${archive.includes}"/ -->
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-http</artifactId>
				<version>[2.8,)</version>
			</extension>
		</extensions>
	</build>
	<repositories>
		<repository>
			<!-- Oracle Maven Repository, see https://maven.oracle.com/doc.html -->
			<!-- An example of configuration in ~/.m2/settings.xml, XPath /settings/servers 
				follows: (wagon-http warnings are OK, including "Not authorized" on https://maven.oracle.com, 
				they do not affect ability to download from the repo) <server> <id>maven.oracle.com</id> 
				<username>YOUR_ORACLE_ACCOUNT_EMAIL</username> <password>YOUR_ORACLE_ACCOUNT_PASSWORD</password> 
				<configuration> <basicAuthScope> <host>ANY</host> <port>ANY</port> <realm>OAM 
				11g</realm> </basicAuthScope> <httpConfiguration> <all> <params> <property> 
				<name>http.protocol.allow-circular-redirects</name> <value>%b,true</value> 
				</property> </params> </all> </httpConfiguration> </configuration> </server> -->
			<id>maven.oracle.com</id>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>https://maven.oracle.com</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>in-project</id>
			<name>In Project Repository</name>
			<url>file://${project.basedir}/libs</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>maven.oracle.com</id>
			<url>https://maven.oracle.com</url>
		</pluginRepository>
	</pluginRepositories>
</project>
